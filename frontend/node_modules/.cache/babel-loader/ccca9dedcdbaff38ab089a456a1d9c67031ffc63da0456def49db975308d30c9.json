{"ast":null,"code":"var _jsxFileName = \"/Users/cro/Downloads/entnt/frontend/src/components/Reporting/FrequencyReport.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport api from \"../../services/api\";\nimport \"./Reports.css\";\n\n// Register necessary components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst FrequencyReport = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [companies, setCompanies] = useState([]); // Store the list of companies\n  const [filter, setFilter] = useState({\n    companyId: \"\",\n    startDate: \"\",\n    endDate: \"\"\n  });\n\n  // Fetch the list of companies\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const response = await api.get(\"/api/admin/companies\");\n        setCompanies(response.data); // Populate companies for dropdown\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n      }\n    };\n    fetchCompanies();\n    fetchFrequencyData(); // Initial data fetch\n  }, []);\n\n  // Fetch frequency report data\n  const fetchFrequencyData = async () => {\n    try {\n      const response = await api.get(\"/reports/communication-frequency\", {\n        params: filter\n      });\n      const data = response.data;\n      setChartData({\n        labels: data.methods,\n        datasets: [{\n          label: \"Communication Frequency\",\n          data: data.frequencies,\n          backgroundColor: [\"#33ffff\", \"#66ffff\", \"#99ffff\", \"#00ffff\"]\n        }]\n      });\n    } catch (error) {\n      console.error(\"Error fetching frequency report:\", error);\n    }\n  };\n\n  // Handle filter change\n  const handleFilterChange = e => {\n    setFilter({\n      ...filter,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFilterSubmit = e => {\n    e.preventDefault();\n    fetchFrequencyData();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Communication Frequency Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFilterSubmit,\n      className: \"filter-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Company:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"companyId\",\n          value: filter.companyId,\n          onChange: handleFilterChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), companies.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: company.id,\n            children: company.name\n          }, company.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"startDate\",\n          value: filter.startDate,\n          onChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"endDate\",\n          value: filter.endDate,\n          onChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Apply Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: chartData && /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(FrequencyReport, \"IzJ+Q8nTJecIKxElh+XyrwDj9BM=\");\n_c = FrequencyReport;\nexport default FrequencyReport;\nvar _c;\n$RefreshReg$(_c, \"FrequencyReport\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","api","jsxDEV","_jsxDEV","register","FrequencyReport","_s","chartData","setChartData","companies","setCompanies","filter","setFilter","companyId","startDate","endDate","fetchCompanies","response","get","data","error","console","fetchFrequencyData","params","labels","methods","datasets","label","frequencies","backgroundColor","handleFilterChange","e","target","name","value","handleFilterSubmit","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","onChange","map","company","id","type","_c","$RefreshReg$"],"sources":["/Users/cro/Downloads/entnt/frontend/src/components/Reporting/FrequencyReport.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport api from \"../../services/api\";\nimport \"./Reports.css\";\n\n// Register necessary components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n);\n\nconst FrequencyReport = () => {\n  const [chartData, setChartData] = useState(null);\n  const [companies, setCompanies] = useState([]); // Store the list of companies\n  const [filter, setFilter] = useState({\n    companyId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n  });\n\n  // Fetch the list of companies\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const response = await api.get(\"/api/admin/companies\");\n        setCompanies(response.data); // Populate companies for dropdown\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n      }\n    };\n\n    fetchCompanies();\n    fetchFrequencyData(); // Initial data fetch\n  }, []);\n\n  // Fetch frequency report data\n  const fetchFrequencyData = async () => {\n    try {\n      const response = await api.get(\"/reports/communication-frequency\", {\n        params: filter,\n      });\n      const data = response.data;\n\n      setChartData({\n        labels: data.methods,\n        datasets: [\n          {\n            label: \"Communication Frequency\",\n            data: data.frequencies,\n            backgroundColor: [\"#33ffff\", \"#66ffff\", \"#99ffff\", \"#00ffff\"],\n          },\n        ],\n      });\n    } catch (error) {\n      console.error(\"Error fetching frequency report:\", error);\n    }\n  };\n\n  // Handle filter change\n  const handleFilterChange = (e) => {\n    setFilter({ ...filter, [e.target.name]: e.target.value });\n  };\n\n  const handleFilterSubmit = (e) => {\n    e.preventDefault();\n    fetchFrequencyData();\n  };\n\n  return (\n    <div>\n      <h1>Communication Frequency Report</h1>\n      <form onSubmit={handleFilterSubmit} className=\"filter-form\">\n        {/* Dropdown for Company Selection */}\n        <label>\n          Company:\n          <select\n            name=\"companyId\"\n            value={filter.companyId}\n            onChange={handleFilterChange}\n          >\n            <option value=\"\">Select a Company</option>\n            {companies.map((company) => (\n              <option key={company.id} value={company.id}>\n                {company.name}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <label>\n          Start Date:\n          <input\n            type=\"date\"\n            name=\"startDate\"\n            value={filter.startDate}\n            onChange={handleFilterChange}\n          />\n        </label>\n\n        <label>\n          End Date:\n          <input\n            type=\"date\"\n            name=\"endDate\"\n            value={filter.endDate}\n            onChange={handleFilterChange}\n          />\n        </label>\n\n        <button type=\"submit\">Apply Filters</button>\n      </form>\n\n      {/* Render the chart */}\n      <div className=\"chart-container\">\n        {chartData && <Bar data={chartData} />}\n      </div>\n    </div>\n  );\n};\n\nexport default FrequencyReport;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}