{"ast":null,"code":"var _jsxFileName = \"/Users/cro/Downloads/entnt/frontend/src/components/Reporting/EngagementEffectiveness.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport api from \"../../services/api\";\nimport \"./Reports.css\";\n\n// Register necessary components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst EngagementEffectiveness = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    fetchEffectivenessData();\n  }, []);\n  const fetchEffectivenessData = async () => {\n    try {\n      const response = await api.get(\"/api/reports/engagement-effectiveness\");\n      const data = response.data;\n      setChartData({\n        labels: data.methods,\n        datasets: [{\n          label: \"Engagement Effectiveness\",\n          data: data.effectiveness,\n          backgroundColor: [\"#33ffff\", \"#66ffff\", \"#99ffff\", \"#00ffff\"]\n        }]\n      });\n    } catch (error) {\n      console.error(\"Error fetching effectiveness report:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"engagement-effectiveness\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Engagement Effectiveness\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: chartData && /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(EngagementEffectiveness, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = EngagementEffectiveness;\nexport default EngagementEffectiveness;\nvar _c;\n$RefreshReg$(_c, \"EngagementEffectiveness\");","map":{"version":3,"names":["React","useState","useEffect","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","api","jsxDEV","_jsxDEV","register","EngagementEffectiveness","_s","chartData","setChartData","fetchEffectivenessData","response","get","data","labels","methods","datasets","label","effectiveness","backgroundColor","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cro/Downloads/entnt/frontend/src/components/Reporting/EngagementEffectiveness.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport api from \"../../services/api\";\nimport \"./Reports.css\";\n\n// Register necessary components\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst EngagementEffectiveness = () => {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    fetchEffectivenessData();\n  }, []);\n\n  const fetchEffectivenessData = async () => {\n    try {\n      const response = await api.get(\"/api/reports/engagement-effectiveness\");\n      const data = response.data;\n\n      setChartData({\n        labels: data.methods,\n        datasets: [\n          {\n            label: \"Engagement Effectiveness\",\n            data: data.effectiveness,\n            backgroundColor: [\"#33ffff\", \"#66ffff\", \"#99ffff\", \"#00ffff\"],\n          },\n        ],\n      });\n    } catch (error) {\n      console.error(\"Error fetching effectiveness report:\", error);\n    }\n  };\n\n  return (\n    <div className=\"engagement-effectiveness\">\n      <h1>Engagement Effectiveness</h1>\n      <div className=\"chart-container\">\n        {chartData && <Pie data={chartData} />}\n      </div>\n    </div>\n  );\n};\n\nexport default EngagementEffectiveness;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACxE,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAO,eAAe;;AAEtB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAN,OAAO,CAACO,QAAQ,CAACN,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,MAAMK,uBAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACde,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,uCAAuC,CAAC;MACvE,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI;MAE1BJ,YAAY,CAAC;QACXK,MAAM,EAAED,IAAI,CAACE,OAAO;QACpBC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,0BAA0B;UACjCJ,IAAI,EAAEA,IAAI,CAACK,aAAa;UACxBC,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;QAC9D,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC9D;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKkB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvCnB,OAAA;MAAAmB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCvB,OAAA;MAAKkB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7Bf,SAAS,iBAAIJ,OAAA,CAACR,GAAG;QAACiB,IAAI,EAAEL;MAAU;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnCID,uBAAuB;AAAAsB,EAAA,GAAvBtB,uBAAuB;AAqC7B,eAAeA,uBAAuB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}