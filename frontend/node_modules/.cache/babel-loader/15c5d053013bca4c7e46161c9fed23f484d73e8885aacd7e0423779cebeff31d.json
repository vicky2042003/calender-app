{"ast":null,"code":"import _objectSpread from\"C:/Users/ADMIN/Desktop/clone/ENTNT_Assignment/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import api from\"../../services/api\";import{saveAs}from\"file-saver\";import\"./Reports.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ActivityLog=()=>{const[logs,setLogs]=useState([]);const[companies,setCompanies]=useState([]);// Store the list of companies\nconst[filters,setFilters]=useState({startDate:\"\",endDate:\"\",companyId:\"\"// Filter by company ID\n});useEffect(()=>{fetchCompanies();// Fetch the list of companies\nfetchActivityLog();// Fetch initial activity logs\n},[]);// Fetch list of companies\nconst fetchCompanies=async()=>{try{const response=await api.get(\"/admin/companies\");setCompanies(response.data);// Populate companies for dropdown\n}catch(error){console.error(\"Error fetching companies:\",error);}};// Fetch activity log data\nconst fetchActivityLog=async()=>{try{const response=await api.get(\"/reports/activity-log\",{params:filters});setLogs(response.data);}catch(error){console.error(\"Error fetching activity log:\",error);}};// Handle filter changes\nconst handleFilterChange=e=>{setFilters(_objectSpread(_objectSpread({},filters),{},{[e.target.name]:e.target.value}));};const handleFilterSubmit=e=>{e.preventDefault();fetchActivityLog();};// Export Activity Log (CSV or PDF)\nconst handleExport=async format=>{try{const response=await api.get(\"/reports/activity-log/export\",{params:{format},responseType:\"blob\"// Required for file download\n});const fileName=\"activity_log.\".concat(format);saveAs(response.data,fileName);// Save file\n}catch(error){console.error(\"Error exporting activity log as \".concat(format,\":\"),error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Real-Time Activity Log\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleFilterSubmit,className:\"filter-form\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Company:\",/*#__PURE__*/_jsxs(\"select\",{name:\"companyId\",value:filters.companyId,onChange:handleFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a Company\"}),companies.map(company=>/*#__PURE__*/_jsx(\"option\",{value:company.id,children:company.name},company.id))]})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Start Date:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"startDate\",value:filters.startDate,onChange:handleFilterChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"End Date:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"endDate\",value:filters.endDate,onChange:handleFilterChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Apply Filters\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"export-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleExport(\"csv\"),children:\"Export as CSV\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleExport(\"pdf\"),children:\"Export as PDF\"})]}),/*#__PURE__*/_jsxs(\"table\",{className:\"log-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Company\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Method\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Notes\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:logs.map((log,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:log.date}),/*#__PURE__*/_jsx(\"td\",{children:log.company}),/*#__PURE__*/_jsx(\"td\",{children:log.method}),/*#__PURE__*/_jsx(\"td\",{children:log.notes})]},index))})]})]});};export default ActivityLog;","map":{"version":3,"names":["React","useState","useEffect","api","saveAs","jsx","_jsx","jsxs","_jsxs","ActivityLog","logs","setLogs","companies","setCompanies","filters","setFilters","startDate","endDate","companyId","fetchCompanies","fetchActivityLog","response","get","data","error","console","params","handleFilterChange","e","_objectSpread","target","name","value","handleFilterSubmit","preventDefault","handleExport","format","responseType","fileName","concat","children","onSubmit","className","onChange","map","company","id","type","onClick","log","index","date","method","notes"],"sources":["C:/Users/ADMIN/Desktop/clone/ENTNT_Assignment/frontend/src/components/Reporting/ActivityLog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport api from \"../../services/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport \"./Reports.css\";\r\n\r\nconst ActivityLog = () => {\r\n  const [logs, setLogs] = useState([]);\r\n  const [companies, setCompanies] = useState([]); // Store the list of companies\r\n  const [filters, setFilters] = useState({\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    companyId: \"\", // Filter by company ID\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchCompanies(); // Fetch the list of companies\r\n    fetchActivityLog(); // Fetch initial activity logs\r\n  }, []);\r\n\r\n  // Fetch list of companies\r\n  const fetchCompanies = async () => {\r\n    try {\r\n      const response = await api.get(\"/admin/companies\");\r\n      setCompanies(response.data); // Populate companies for dropdown\r\n    } catch (error) {\r\n      console.error(\"Error fetching companies:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch activity log data\r\n  const fetchActivityLog = async () => {\r\n    try {\r\n      const response = await api.get(\"/reports/activity-log\", {\r\n        params: filters,\r\n      });\r\n      setLogs(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching activity log:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle filter changes\r\n  const handleFilterChange = (e) => {\r\n    setFilters({ ...filters, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFilterSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchActivityLog();\r\n  };\r\n\r\n  // Export Activity Log (CSV or PDF)\r\n  const handleExport = async (format) => {\r\n    try {\r\n      const response = await api.get(\"/reports/activity-log/export\", {\r\n        params: { format },\r\n        responseType: \"blob\", // Required for file download\r\n      });\r\n      const fileName = `activity_log.${format}`;\r\n      saveAs(response.data, fileName); // Save file\r\n    } catch (error) {\r\n      console.error(`Error exporting activity log as ${format}:`, error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Real-Time Activity Log</h1>\r\n      <form onSubmit={handleFilterSubmit} className=\"filter-form\">\r\n        {/* Company Dropdown */}\r\n        <label>\r\n          Company:\r\n          <select\r\n            name=\"companyId\"\r\n            value={filters.companyId}\r\n            onChange={handleFilterChange}\r\n          >\r\n            <option value=\"\">Select a Company</option>\r\n            {companies.map((company) => (\r\n              <option key={company.id} value={company.id}>\r\n                {company.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n\r\n        <label>\r\n          Start Date:\r\n          <input\r\n            type=\"date\"\r\n            name=\"startDate\"\r\n            value={filters.startDate}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          End Date:\r\n          <input\r\n            type=\"date\"\r\n            name=\"endDate\"\r\n            value={filters.endDate}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Apply Filters</button>\r\n      </form>\r\n\r\n      {/* Export Buttons */}\r\n      <div className=\"export-buttons\">\r\n        <button onClick={() => handleExport(\"csv\")}>Export as CSV</button>\r\n        <button onClick={() => handleExport(\"pdf\")}>Export as PDF</button>\r\n      </div>\r\n\r\n      {/* Activity Log Table */}\r\n      <table className=\"log-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Company</th>\r\n            <th>Method</th>\r\n            <th>Notes</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {logs.map((log, index) => (\r\n            <tr key={index}>\r\n              <td>{log.date}</td>\r\n              <td>{log.company}</td>\r\n              <td>{log.method}</td>\r\n              <td>{log.notes}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityLog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}