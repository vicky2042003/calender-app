{"ast":null,"code":"var _jsxFileName = \"/Users/cro/Downloads/entnt/frontend/src/components/User/LogCommunication.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../../services/api\";\nimport \"./LogCommunication.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogCommunication = () => {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [methods, setMethods] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\n  const [selectedMethod, setSelectedMethod] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const companyResponse = await api.get(\"/admin/companies\");\n        const methodResponse = await api.get(\"/admin/communication-methods\");\n        setCompanies(companyResponse.data);\n        setMethods(methodResponse.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await api.post(\"/user/log-communication\", {\n        company_id: selectedCompany,\n        method_id: selectedMethod,\n        date,\n        notes\n      });\n      alert(\"Communication logged successfully!\");\n      setSelectedCompany(\"\");\n      setSelectedMethod(\"\");\n      setDate(\"\");\n      setNotes(\"\");\n    } catch (error) {\n      console.error(\"Error logging communication:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log Communication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"log-communication-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Company:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCompany,\n          onChange: e => setSelectedCompany(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), companies.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: company.id,\n            children: company.name\n          }, company.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Communication Method:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedMethod,\n          onChange: e => setSelectedMethod(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), methods.map(method => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: method.id,\n            children: method.name\n          }, method.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Notes:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: notes,\n          onChange: e => setNotes(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log Communication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(LogCommunication, \"6BKfiJDFuJVprg6dkB2sACECTrQ=\");\n_c = LogCommunication;\nexport default LogCommunication;\nvar _c;\n$RefreshReg$(_c, \"LogCommunication\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","LogCommunication","_s","companies","setCompanies","methods","setMethods","selectedCompany","setSelectedCompany","selectedMethod","setSelectedMethod","date","setDate","notes","setNotes","fetchData","companyResponse","get","methodResponse","data","error","console","handleSubmit","e","preventDefault","post","company_id","method_id","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","value","onChange","target","map","company","id","name","method","type","_c","$RefreshReg$"],"sources":["/Users/cro/Downloads/entnt/frontend/src/components/User/LogCommunication.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from \"../../services/api\";\nimport \"./LogCommunication.css\";\n\nconst LogCommunication = () => {\n  const [companies, setCompanies] = useState([]);\n  const [methods, setMethods] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\n  const [selectedMethod, setSelectedMethod] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const companyResponse = await api.get(\"/admin/companies\");\n        const methodResponse = await api.get(\"/admin/communication-methods\");\n        setCompanies(companyResponse.data);\n        setMethods(methodResponse.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await api.post(\"/user/log-communication\", {\n        company_id: selectedCompany,\n        method_id: selectedMethod,\n        date,\n        notes,\n      });\n      alert(\"Communication logged successfully!\");\n      setSelectedCompany(\"\");\n      setSelectedMethod(\"\");\n      setDate(\"\");\n      setNotes(\"\");\n    } catch (error) {\n      console.error(\"Error logging communication:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Log Communication</h1>\n      <form onSubmit={handleSubmit} className=\"log-communication-form\">\n        <label>\n          Company:\n          <select\n            value={selectedCompany}\n            onChange={(e) => setSelectedCompany(e.target.value)}\n          >\n            <option value=\"\">Select Company</option>\n            {companies.map((company) => (\n              <option key={company.id} value={company.id}>\n                {company.name}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <label>\n          Communication Method:\n          <select\n            value={selectedMethod}\n            onChange={(e) => setSelectedMethod(e.target.value)}\n          >\n            <option value=\"\">Select Method</option>\n            {methods.map((method) => (\n              <option key={method.id} value={method.id}>\n                {method.name}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <label>\n          Date:\n          <input\n            type=\"date\"\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n          />\n        </label>\n\n        <label>\n          Notes:\n          <textarea value={notes} onChange={(e) => setNotes(e.target.value)} />\n        </label>\n\n        <button type=\"submit\">Log Communication</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LogCommunication;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}