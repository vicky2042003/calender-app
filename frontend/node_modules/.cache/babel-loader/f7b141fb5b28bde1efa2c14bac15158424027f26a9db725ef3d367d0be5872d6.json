{"ast":null,"code":"import _objectSpread from\"C:/Users/ADMIN/Desktop/clone/ENTNT_Assignment/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import{Bar}from\"react-chartjs-2\";import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from\"chart.js\";import api from\"../../services/api\";import\"./Reports.css\";// Register necessary components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const FrequencyReport=()=>{const[chartData,setChartData]=useState(null);const[companies,setCompanies]=useState([]);// Store the list of companies\nconst[filter,setFilter]=useState({companyId:\"\",startDate:\"\",endDate:\"\"});// Fetch the list of companies\nuseEffect(()=>{const fetchCompanies=async()=>{try{const response=await api.get(\"/user/companies\");setCompanies(response.data);// Populate companies for dropdown\n}catch(error){console.error(\"Error fetching companies:\",error);}};fetchCompanies();fetchFrequencyData();// Initial data fetch\n},[]);// Fetch frequency report data\nconst fetchFrequencyData=async()=>{try{const response=await api.get(\"/reports/communication-frequency\",{params:filter});const data=response.data;setChartData({labels:data.methods,datasets:[{label:\"Communication Frequency\",data:data.frequencies,backgroundColor:[\"#33ffff\",\"#66ffff\",\"#99ffff\",\"#00ffff\"]}]});}catch(error){console.error(\"Error fetching frequency report:\",error);}};// Handle filter change\nconst handleFilterChange=e=>{setFilter(_objectSpread(_objectSpread({},filter),{},{[e.target.name]:e.target.value}));};const handleFilterSubmit=e=>{e.preventDefault();fetchFrequencyData();};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Communication Frequency Report\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleFilterSubmit,className:\"filter-form\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Company:\",/*#__PURE__*/_jsxs(\"select\",{name:\"companyId\",value:filter.companyId,onChange:handleFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a Company\"}),companies.map(company=>/*#__PURE__*/_jsx(\"option\",{value:company.id,children:company.name},company.id))]})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Start Date:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"startDate\",value:filter.startDate,onChange:handleFilterChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"End Date:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"endDate\",value:filter.endDate,onChange:handleFilterChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Apply Filters\"})]}),chartData&&/*#__PURE__*/_jsx(Bar,{data:chartData})]});};export default FrequencyReport;","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","api","jsx","_jsx","jsxs","_jsxs","register","FrequencyReport","chartData","setChartData","companies","setCompanies","filter","setFilter","companyId","startDate","endDate","fetchCompanies","response","get","data","error","console","fetchFrequencyData","params","labels","methods","datasets","label","frequencies","backgroundColor","handleFilterChange","e","_objectSpread","target","name","value","handleFilterSubmit","preventDefault","children","onSubmit","className","onChange","map","company","id","type"],"sources":["C:/Users/ADMIN/Desktop/clone/ENTNT_Assignment/frontend/src/components/Reporting/FrequencyReport.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport api from \"../../services/api\";\r\nimport \"./Reports.css\";\r\n\r\n// Register necessary components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n);\r\n\r\nconst FrequencyReport = () => {\r\n  const [chartData, setChartData] = useState(null);\r\n  const [companies, setCompanies] = useState([]); // Store the list of companies\r\n  const [filter, setFilter] = useState({\r\n    companyId: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n\r\n  // Fetch the list of companies\r\n  useEffect(() => {\r\n    const fetchCompanies = async () => {\r\n      try {\r\n        const response = await api.get(\"/user/companies\");\r\n        setCompanies(response.data); // Populate companies for dropdown\r\n      } catch (error) {\r\n        console.error(\"Error fetching companies:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCompanies();\r\n    fetchFrequencyData(); // Initial data fetch\r\n  }, []);\r\n\r\n  // Fetch frequency report data\r\n  const fetchFrequencyData = async () => {\r\n    try {\r\n      const response = await api.get(\"/reports/communication-frequency\", {\r\n        params: filter,\r\n      });\r\n      const data = response.data;\r\n\r\n      setChartData({\r\n        labels: data.methods,\r\n        datasets: [\r\n          {\r\n            label: \"Communication Frequency\",\r\n            data: data.frequencies,\r\n            backgroundColor: [\"#33ffff\", \"#66ffff\", \"#99ffff\", \"#00ffff\"],\r\n          },\r\n        ],\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching frequency report:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle filter change\r\n  const handleFilterChange = (e) => {\r\n    setFilter({ ...filter, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFilterSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchFrequencyData();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Communication Frequency Report</h1>\r\n      <form onSubmit={handleFilterSubmit} className=\"filter-form\">\r\n        {/* Dropdown for Company Selection */}\r\n        <label>\r\n          Company:\r\n          <select\r\n            name=\"companyId\"\r\n            value={filter.companyId}\r\n            onChange={handleFilterChange}\r\n          >\r\n            <option value=\"\">Select a Company</option>\r\n            {companies.map((company) => (\r\n              <option key={company.id} value={company.id}>\r\n                {company.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n\r\n        <label>\r\n          Start Date:\r\n          <input\r\n            type=\"date\"\r\n            name=\"startDate\"\r\n            value={filter.startDate}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          End Date:\r\n          <input\r\n            type=\"date\"\r\n            name=\"endDate\"\r\n            value={filter.endDate}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Apply Filters</button>\r\n      </form>\r\n\r\n      {/* Render the chart */}\r\n      {chartData && <Bar data={chartData} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FrequencyReport;\r\n"],"mappings":"2IAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,GAAG,KAAQ,iBAAiB,CACrC,OACEC,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,KACD,UAAU,CACjB,MAAO,CAAAC,GAAG,KAAM,oBAAoB,CACpC,MAAO,eAAe,CAEtB;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACAX,OAAO,CAACY,QAAQ,CACdX,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MACF,CAAC,CAED,KAAM,CAAAO,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACoB,SAAS,CAAEC,YAAY,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAChD,KAAM,CAACsB,MAAM,CAAEC,SAAS,CAAC,CAAGvB,QAAQ,CAAC,CACnCwB,SAAS,CAAE,EAAE,CACbC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,EACX,CAAC,CAAC,CAEF;AACAzB,SAAS,CAAC,IAAM,CACd,KAAM,CAAA0B,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAjB,GAAG,CAACkB,GAAG,CAAC,iBAAiB,CAAC,CACjDR,YAAY,CAACO,QAAQ,CAACE,IAAI,CAAC,CAAE;AAC/B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CACF,CAAC,CAEDJ,cAAc,CAAC,CAAC,CAChBM,kBAAkB,CAAC,CAAC,CAAE;AACxB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAA,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAjB,GAAG,CAACkB,GAAG,CAAC,kCAAkC,CAAE,CACjEK,MAAM,CAAEZ,MACV,CAAC,CAAC,CACF,KAAM,CAAAQ,IAAI,CAAGF,QAAQ,CAACE,IAAI,CAE1BX,YAAY,CAAC,CACXgB,MAAM,CAAEL,IAAI,CAACM,OAAO,CACpBC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,yBAAyB,CAChCR,IAAI,CAAEA,IAAI,CAACS,WAAW,CACtBC,eAAe,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAC9D,CAAC,CAEL,CAAC,CAAC,CACJ,CAAE,MAAOT,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CAC1D,CACF,CAAC,CAED;AACA,KAAM,CAAAU,kBAAkB,CAAIC,CAAC,EAAK,CAChCnB,SAAS,CAAAoB,aAAA,CAAAA,aAAA,IAAMrB,MAAM,MAAE,CAACoB,CAAC,CAACE,MAAM,CAACC,IAAI,EAAGH,CAAC,CAACE,MAAM,CAACE,KAAK,EAAE,CAAC,CAC3D,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAIL,CAAC,EAAK,CAChCA,CAAC,CAACM,cAAc,CAAC,CAAC,CAClBf,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAED,mBACElB,KAAA,QAAAkC,QAAA,eACEpC,IAAA,OAAAoC,QAAA,CAAI,gCAA8B,CAAI,CAAC,cACvClC,KAAA,SAAMmC,QAAQ,CAAEH,kBAAmB,CAACI,SAAS,CAAC,aAAa,CAAAF,QAAA,eAEzDlC,KAAA,UAAAkC,QAAA,EAAO,UAEL,cAAAlC,KAAA,WACE8B,IAAI,CAAC,WAAW,CAChBC,KAAK,CAAExB,MAAM,CAACE,SAAU,CACxB4B,QAAQ,CAAEX,kBAAmB,CAAAQ,QAAA,eAE7BpC,IAAA,WAAQiC,KAAK,CAAC,EAAE,CAAAG,QAAA,CAAC,kBAAgB,CAAQ,CAAC,CACzC7B,SAAS,CAACiC,GAAG,CAAEC,OAAO,eACrBzC,IAAA,WAAyBiC,KAAK,CAAEQ,OAAO,CAACC,EAAG,CAAAN,QAAA,CACxCK,OAAO,CAACT,IAAI,EADFS,OAAO,CAACC,EAEb,CACT,CAAC,EACI,CAAC,EACJ,CAAC,cAERxC,KAAA,UAAAkC,QAAA,EAAO,aAEL,cAAApC,IAAA,UACE2C,IAAI,CAAC,MAAM,CACXX,IAAI,CAAC,WAAW,CAChBC,KAAK,CAAExB,MAAM,CAACG,SAAU,CACxB2B,QAAQ,CAAEX,kBAAmB,CAC9B,CAAC,EACG,CAAC,cAER1B,KAAA,UAAAkC,QAAA,EAAO,WAEL,cAAApC,IAAA,UACE2C,IAAI,CAAC,MAAM,CACXX,IAAI,CAAC,SAAS,CACdC,KAAK,CAAExB,MAAM,CAACI,OAAQ,CACtB0B,QAAQ,CAAEX,kBAAmB,CAC9B,CAAC,EACG,CAAC,cAER5B,IAAA,WAAQ2C,IAAI,CAAC,QAAQ,CAAAP,QAAA,CAAC,eAAa,CAAQ,CAAC,EACxC,CAAC,CAGN/B,SAAS,eAAIL,IAAA,CAACX,GAAG,EAAC4B,IAAI,CAAEZ,SAAU,CAAE,CAAC,EACnC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}