{"ast":null,"code":"var _jsxFileName = \"/Users/cro/Downloads/entnt/frontend/src/components/User/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"../services/api\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    axios.get(\"/calendar\").then(response => {\n      const formattedEvents = response.data.map(log => ({\n        title: `${log.company_name} - ${log.method}`,\n        date: log.date,\n        extendedProps: {\n          notes: log.notes\n        }\n      }));\n      setEvents(formattedEvents);\n    }).catch(error => console.error(\"Error fetching calendar data:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Communication Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventContent: renderEventContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = Calendar;\nfunction renderEventContent(eventInfo) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: eventInfo.event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: eventInfo.event.extendedProps.notes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","axios","FullCalendar","dayGridPlugin","jsxDEV","_jsxDEV","Calendar","_s","events","setEvents","get","then","response","formattedEvents","data","map","log","title","company_name","method","date","extendedProps","notes","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","eventContent","renderEventContent","_c","eventInfo","event","$RefreshReg$"],"sources":["/Users/cro/Downloads/entnt/frontend/src/components/User/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"../services/api\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n\nconst Calendar = () => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"/calendar\")\n      .then((response) => {\n        const formattedEvents = response.data.map((log) => ({\n          title: `${log.company_name} - ${log.method}`,\n          date: log.date,\n          extendedProps: { notes: log.notes },\n        }));\n        setEvents(formattedEvents);\n      })\n      .catch((error) => console.error(\"Error fetching calendar data:\", error));\n  }, []);\n\n  return (\n    <div className=\"calendar\">\n      <h1>Communication Calendar</h1>\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        initialView=\"dayGridMonth\"\n        events={events}\n        eventContent={renderEventContent}\n      />\n    </div>\n  );\n};\n\nfunction renderEventContent(eventInfo) {\n  return (\n    <div>\n      <strong>{eventInfo.event.title}</strong>\n      <p>{eventInfo.event.extendedProps.notes}</p>\n    </div>\n  );\n}\n\nexport default Calendar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFS,GAAG,CAAC,WAAW,CAAC,CAChBC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,eAAe,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;QAClDC,KAAK,EAAE,GAAGD,GAAG,CAACE,YAAY,MAAMF,GAAG,CAACG,MAAM,EAAE;QAC5CC,IAAI,EAAEJ,GAAG,CAACI,IAAI;QACdC,aAAa,EAAE;UAAEC,KAAK,EAAEN,GAAG,CAACM;QAAM;MACpC,CAAC,CAAC,CAAC;MACHb,SAAS,CAACI,eAAe,CAAC;IAC5B,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC;EAC5E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA;IAAKqB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBtB,OAAA;MAAAsB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B1B,OAAA,CAACH,YAAY;MACX8B,OAAO,EAAE,CAAC7B,aAAa,CAAE;MACzB8B,WAAW,EAAC,cAAc;MAC1BzB,MAAM,EAAEA,MAAO;MACf0B,YAAY,EAAEC;IAAmB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA5BID,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AA8Bd,SAAS6B,kBAAkBA,CAACE,SAAS,EAAE;EACrC,oBACEhC,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAASU,SAAS,CAACC,KAAK,CAACrB;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACxC1B,OAAA;MAAAsB,QAAA,EAAIU,SAAS,CAACC,KAAK,CAACjB,aAAa,CAACC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAEA,eAAezB,QAAQ;AAAC,IAAA8B,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}