{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Pie}from\"react-chartjs-2\";import{Chart as ChartJS,ArcElement,Tooltip,Legend}from\"chart.js\";import api from\"../../services/api\";import\"./EngagementEffectivesness.css\";// Register necessary Chart.js components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(ArcElement,Tooltip,Legend);const EngagementEffectiveness=()=>{const[chartData,setChartData]=useState(null);useEffect(()=>{fetchEffectivenessData();},[]);const fetchEffectivenessData=async()=>{try{const response=await api.get(\"reports/engagement-effectiveness\");const data=response.data;// Use distinct colors for each method\nconst colors=[\"#ff6384\",\"#36a2eb\",\"#ffcd56\",\"#4bc0c0\",\"#9966ff\",\"#ff9f40\"];setChartData({labels:data.methods,datasets:[{label:\"Engagement Effectiveness\",data:data.effectiveness,backgroundColor:colors.slice(0,data.methods.length),// Use as many colors as needed\nborderColor:\"#ffffff\",// White border for segments\nborderWidth:1}]});}catch(error){console.error(\"Error fetching effectiveness report:\",error);}};const options={responsive:true,maintainAspectRatio:false,// Allow chart to resize within container\nplugins:{legend:{position:\"bottom\"// Position legend at the bottom\n}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"engagement-effectiveness\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Engagement Effectiveness\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:chartData&&/*#__PURE__*/_jsx(Pie,{data:chartData,options:options})})]});};export default EngagementEffectiveness;","map":{"version":3,"names":["React","useState","useEffect","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","api","jsx","_jsx","jsxs","_jsxs","register","EngagementEffectiveness","chartData","setChartData","fetchEffectivenessData","response","get","data","colors","labels","methods","datasets","label","effectiveness","backgroundColor","slice","length","borderColor","borderWidth","error","console","options","responsive","maintainAspectRatio","plugins","legend","position","className","children"],"sources":["C:/Users/ADMIN/Desktop/clone/ENTNT_Assignment/frontend/src/components/Reporting/EngagementEffectiveness.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport api from \"../../services/api\";\r\nimport \"./EngagementEffectivesness.css\";\r\n\r\n// Register necessary Chart.js components\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst EngagementEffectiveness = () => {\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchEffectivenessData();\r\n  }, []);\r\n\r\n  const fetchEffectivenessData = async () => {\r\n    try {\r\n      const response = await api.get(\"reports/engagement-effectiveness\");\r\n      const data = response.data;\r\n\r\n      // Use distinct colors for each method\r\n      const colors = [\r\n        \"#ff6384\",\r\n        \"#36a2eb\",\r\n        \"#ffcd56\",\r\n        \"#4bc0c0\",\r\n        \"#9966ff\",\r\n        \"#ff9f40\",\r\n      ];\r\n\r\n      setChartData({\r\n        labels: data.methods,\r\n        datasets: [\r\n          {\r\n            label: \"Engagement Effectiveness\",\r\n            data: data.effectiveness,\r\n            backgroundColor: colors.slice(0, data.methods.length), // Use as many colors as needed\r\n            borderColor: \"#ffffff\", // White border for segments\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching effectiveness report:\", error);\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false, // Allow chart to resize within container\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\", // Position legend at the bottom\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"engagement-effectiveness\">\r\n      <h1>Engagement Effectiveness</h1>\r\n      <div className=\"chart-container\">\r\n        {chartData && <Pie data={chartData} options={options} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EngagementEffectiveness;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,GAAG,KAAQ,iBAAiB,CACrC,OAASC,KAAK,GAAI,CAAAC,OAAO,CAAEC,UAAU,CAAEC,OAAO,CAAEC,MAAM,KAAQ,UAAU,CACxE,MAAO,CAAAC,GAAG,KAAM,oBAAoB,CACpC,MAAO,gCAAgC,CAEvC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACAR,OAAO,CAACS,QAAQ,CAACR,UAAU,CAAEC,OAAO,CAAEC,MAAM,CAAC,CAE7C,KAAM,CAAAO,uBAAuB,CAAGA,CAAA,GAAM,CACpC,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAEhDC,SAAS,CAAC,IAAM,CACdgB,sBAAsB,CAAC,CAAC,CAC1B,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,sBAAsB,CAAG,KAAAA,CAAA,GAAY,CACzC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAV,GAAG,CAACW,GAAG,CAAC,kCAAkC,CAAC,CAClE,KAAM,CAAAC,IAAI,CAAGF,QAAQ,CAACE,IAAI,CAE1B;AACA,KAAM,CAAAC,MAAM,CAAG,CACb,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACV,CAEDL,YAAY,CAAC,CACXM,MAAM,CAAEF,IAAI,CAACG,OAAO,CACpBC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,0BAA0B,CACjCL,IAAI,CAAEA,IAAI,CAACM,aAAa,CACxBC,eAAe,CAAEN,MAAM,CAACO,KAAK,CAAC,CAAC,CAAER,IAAI,CAACG,OAAO,CAACM,MAAM,CAAC,CAAE;AACvDC,WAAW,CAAE,SAAS,CAAE;AACxBC,WAAW,CAAE,CACf,CAAC,CAEL,CAAC,CAAC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAEA,KAAK,CAAC,CAC9D,CACF,CAAC,CAED,KAAM,CAAAE,OAAO,CAAG,CACdC,UAAU,CAAE,IAAI,CAChBC,mBAAmB,CAAE,KAAK,CAAE;AAC5BC,OAAO,CAAE,CACPC,MAAM,CAAE,CACNC,QAAQ,CAAE,QAAU;AACtB,CACF,CACF,CAAC,CAED,mBACE3B,KAAA,QAAK4B,SAAS,CAAC,0BAA0B,CAAAC,QAAA,eACvC/B,IAAA,OAAA+B,QAAA,CAAI,0BAAwB,CAAI,CAAC,cACjC/B,IAAA,QAAK8B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC7B1B,SAAS,eAAIL,IAAA,CAACR,GAAG,EAACkB,IAAI,CAAEL,SAAU,CAACmB,OAAO,CAAEA,OAAQ,CAAE,CAAC,CACrD,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAApB,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}