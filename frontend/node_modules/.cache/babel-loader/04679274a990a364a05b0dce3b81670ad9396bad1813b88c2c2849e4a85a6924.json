{"ast":null,"code":"var _jsxFileName = \"/Users/cro/Downloads/entnt/frontend/src/components/Reporting/EngagementEffectiveness.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport api from \"../../services/api\";\nimport \"./EngagementEffectivesness.css\";\n\n// Register necessary Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst EngagementEffectiveness = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    fetchEffectivenessData();\n  }, []);\n  const fetchEffectivenessData = async () => {\n    try {\n      const response = await api.get(\"reports/engagement-effectiveness\");\n      const data = response.data;\n\n      // Use distinct colors for each method\n      const colors = [\"#ff6384\", \"#36a2eb\", \"#ffcd56\", \"#4bc0c0\", \"#9966ff\", \"#ff9f40\"];\n      setChartData({\n        labels: data.methods,\n        datasets: [{\n          label: \"Engagement Effectiveness\",\n          data: data.effectiveness,\n          backgroundColor: colors.slice(0, data.methods.length),\n          // Use as many colors as needed\n          borderColor: \"#ffffff\",\n          // White border for segments\n          borderWidth: 1\n        }]\n      });\n    } catch (error) {\n      console.error(\"Error fetching effectiveness report:\", error);\n    }\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    // Allow chart to resize within container\n    plugins: {\n      legend: {\n        position: \"bottom\" // Position legend at the bottom\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"engagement-effectiveness\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Engagement Effectiveness\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: chartData && /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(EngagementEffectiveness, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = EngagementEffectiveness;\nexport default EngagementEffectiveness;\nvar _c;\n$RefreshReg$(_c, \"EngagementEffectiveness\");","map":{"version":3,"names":["React","useState","useEffect","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","api","jsxDEV","_jsxDEV","register","EngagementEffectiveness","_s","chartData","setChartData","fetchEffectivenessData","response","get","data","colors","labels","methods","datasets","label","effectiveness","backgroundColor","slice","length","borderColor","borderWidth","error","console","options","responsive","maintainAspectRatio","plugins","legend","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cro/Downloads/entnt/frontend/src/components/Reporting/EngagementEffectiveness.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport api from \"../../services/api\";\nimport \"./EngagementEffectivesness.css\";\n\n// Register necessary Chart.js components\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst EngagementEffectiveness = () => {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    fetchEffectivenessData();\n  }, []);\n\n  const fetchEffectivenessData = async () => {\n    try {\n      const response = await api.get(\"reports/engagement-effectiveness\");\n      const data = response.data;\n\n      // Use distinct colors for each method\n      const colors = [\n        \"#ff6384\",\n        \"#36a2eb\",\n        \"#ffcd56\",\n        \"#4bc0c0\",\n        \"#9966ff\",\n        \"#ff9f40\",\n      ];\n\n      setChartData({\n        labels: data.methods,\n        datasets: [\n          {\n            label: \"Engagement Effectiveness\",\n            data: data.effectiveness,\n            backgroundColor: colors.slice(0, data.methods.length), // Use as many colors as needed\n            borderColor: \"#ffffff\", // White border for segments\n            borderWidth: 1,\n          },\n        ],\n      });\n    } catch (error) {\n      console.error(\"Error fetching effectiveness report:\", error);\n    }\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false, // Allow chart to resize within container\n    plugins: {\n      legend: {\n        position: \"bottom\", // Position legend at the bottom\n      },\n    },\n  };\n\n  return (\n    <div className=\"engagement-effectiveness\">\n      <h1>Engagement Effectiveness</h1>\n      <div className=\"chart-container\">\n        {chartData && <Pie data={chartData} options={options} />}\n      </div>\n    </div>\n  );\n};\n\nexport default EngagementEffectiveness;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACxE,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAO,gCAAgC;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAN,OAAO,CAACO,QAAQ,CAACN,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,MAAMK,uBAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACde,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,kCAAkC,CAAC;MAClE,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI;;MAE1B;MACA,MAAMC,MAAM,GAAG,CACb,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;MAEDL,YAAY,CAAC;QACXM,MAAM,EAAEF,IAAI,CAACG,OAAO;QACpBC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,0BAA0B;UACjCL,IAAI,EAAEA,IAAI,CAACM,aAAa;UACxBC,eAAe,EAAEN,MAAM,CAACO,KAAK,CAAC,CAAC,EAAER,IAAI,CAACG,OAAO,CAACM,MAAM,CAAC;UAAE;UACvDC,WAAW,EAAE,SAAS;UAAE;UACxBC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC9D;EACF,CAAC;EAED,MAAME,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAAE;IAC5BC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE,QAAQ,CAAE;MACtB;IACF;EACF,CAAC;EAED,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvC9B,OAAA;MAAA8B,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjClC,OAAA;MAAK6B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7B1B,SAAS,iBAAIJ,OAAA,CAACR,GAAG;QAACiB,IAAI,EAAEL,SAAU;QAACmB,OAAO,EAAEA;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAzDID,uBAAuB;AAAAiC,EAAA,GAAvBjC,uBAAuB;AA2D7B,eAAeA,uBAAuB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}