{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\clone\\\\ENTNT_Assignment\\\\frontend\\\\src\\\\components\\\\Reporting\\\\OverdueTrends.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport api from \"../../services/api\";\nimport \"./Reports.css\";\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, CategoryScale, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register components for Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, LinearScale, CategoryScale, Title, Tooltip, Legend);\nconst OverdueTrends = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    fetchOverdueData();\n  }, []);\n  const fetchOverdueData = async () => {\n    try {\n      const response = await api.get(\"/reports/overdue-trends\");\n      const data = response.data;\n      setChartData({\n        labels: data.dates,\n        datasets: [{\n          label: \"Communication Trends\",\n          data: data.overdue_counts,\n          backgroundColor: \"#33ffff\",\n          borderColor: \"#00ffff\",\n          fill: false\n        }]\n      });\n    } catch (error) {\n      console.error(\"Error fetching overdue trends:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Communication Trends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), chartData && /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(OverdueTrends, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = OverdueTrends;\nexport default OverdueTrends;\nvar _c;\n$RefreshReg$(_c, \"OverdueTrends\");","map":{"version":3,"names":["React","useState","useEffect","Line","api","Chart","ChartJS","LineElement","PointElement","LinearScale","CategoryScale","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","OverdueTrends","_s","chartData","setChartData","fetchOverdueData","response","get","data","labels","dates","datasets","label","overdue_counts","backgroundColor","borderColor","fill","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/clone/ENTNT_Assignment/frontend/src/components/Reporting/OverdueTrends.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport api from \"../../services/api\";\r\nimport \"./Reports.css\";\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  PointElement,\r\n  LinearScale,\r\n  CategoryScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register components for Chart.js\r\nChartJS.register(\r\n  LineElement,\r\n  PointElement,\r\n  LinearScale,\r\n  CategoryScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n);\r\nconst OverdueTrends = () => {\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchOverdueData();\r\n  }, []);\r\n\r\n  const fetchOverdueData = async () => {\r\n    try {\r\n      const response = await api.get(\"/reports/overdue-trends\");\r\n      const data = response.data;\r\n\r\n      setChartData({\r\n        labels: data.dates,\r\n        datasets: [\r\n          {\r\n            label: \"Communication Trends\",\r\n            data: data.overdue_counts,\r\n            backgroundColor: \"#33ffff\",\r\n            borderColor: \"#00ffff\",\r\n            fill: false,\r\n          },\r\n        ],\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching overdue trends:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Communication Trends</h1>\r\n      {chartData && <Line data={chartData} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverdueTrends;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAO,eAAe;AACtB,SACEC,KAAK,IAAIC,OAAO,EAChBC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAT,OAAO,CAACU,QAAQ,CACdT,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AACD,MAAMI,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdmB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,GAAG,CAAC,yBAAyB,CAAC;MACzD,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI;MAE1BJ,YAAY,CAAC;QACXK,MAAM,EAAED,IAAI,CAACE,KAAK;QAClBC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,sBAAsB;UAC7BJ,IAAI,EAAEA,IAAI,CAACK,cAAc;UACzBC,eAAe,EAAE,SAAS;UAC1BC,WAAW,EAAE,SAAS;UACtBC,IAAI,EAAE;QACR,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACElB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BpB,SAAS,iBAAIJ,OAAA,CAACZ,IAAI;MAACqB,IAAI,EAAEL;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAACrB,EAAA,CAnCID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}