{"ast":null,"code":"var _jsxFileName = \"/Users/cro/Downloads/entnt/frontend/src/components/User/Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState({\n    overdue: [],\n    today: []\n  });\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const response = await api.get(\"/user/notifications\");\n        setNotifications(response.data);\n      } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n      }\n    };\n    fetchNotifications();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Overdue Communications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.overdue.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.company_name, \" - \", item.next_communication]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Today's Communications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.today.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.company_name, \" - \", item.next_communication]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"YcXVH7La5JM2U6/Xu+T8I2gUD08=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Notifications","_s","notifications","setNotifications","overdue","today","fetchNotifications","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","company_name","next_communication","_c","$RefreshReg$"],"sources":["/Users/cro/Downloads/entnt/frontend/src/components/User/Notifications.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from \"../services/api\";\n\nconst Notifications = () => {\n  const [notifications, setNotifications] = useState({\n    overdue: [],\n    today: [],\n  });\n\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const response = await api.get(\"/user/notifications\");\n        setNotifications(response.data);\n      } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n      }\n    };\n    fetchNotifications();\n  }, []);\n\n  return (\n    <div>\n      <h1>Notifications</h1>\n      <h2>Overdue Communications</h2>\n      <ul>\n        {notifications.overdue.map((item, index) => (\n          <li key={index}>\n            {item.company_name} - {item.next_communication}\n          </li>\n        ))}\n      </ul>\n\n      <h2>Today's Communications</h2>\n      <ul>\n        {notifications.today.map((item, index) => (\n          <li key={index}>\n            {item.company_name} - {item.next_communication}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Notifications;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC;IACjDS,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE;EACT,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACd,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,qBAAqB,CAAC;QACrDL,gBAAgB,CAACI,QAAQ,CAACE,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACDJ,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjB,OAAA;MAAAa,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BjB,OAAA;MAAAa,QAAA,EACGV,aAAa,CAACE,OAAO,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrCpB,OAAA;QAAAa,QAAA,GACGM,IAAI,CAACE,YAAY,EAAC,KAAG,EAACF,IAAI,CAACG,kBAAkB;MAAA,GADvCF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAELjB,OAAA;MAAAa,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BjB,OAAA;MAAAa,QAAA,EACGV,aAAa,CAACG,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnCpB,OAAA;QAAAa,QAAA,GACGM,IAAI,CAACE,YAAY,EAAC,KAAG,EAACF,IAAI,CAACG,kBAAkB;MAAA,GADvCF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CAxCID,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AA0CnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}